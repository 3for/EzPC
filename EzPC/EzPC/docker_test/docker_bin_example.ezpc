int32 datasize = 1;

int32 thresholdSpace = 5;

int32 thresholdTime = 5;                                                                                               

 

def bool_bl closeInTime(int32_bl t1, int32_bl t2)

{

  int32_bl diff = t1 > t2 ? t1 - t2 : t2 - t1;

  return (diff < thresholdTime);

}

 

def bool_bl closeInSpace(int32_al lat1, int32_al long1, int32_al lat2, int32_al long2)

{

  return ((((lat1 - lat2)*(lat1 - lat2)) + ((long1 - long2)*(long1 - long2))) < thresholdSpace);

}

 

 

def void main()

{

         input(SERVER, dataLocLat, int32_al[datasize]);

        input(SERVER, dataLocLong, int32_al[datasize]);

        input(SERVER, dataTime, int32_bl[datasize]);

        input(CLIENT, queryLocLat, int32_al);

        input(CLIENT, queryLocLong, int32_al);

        input(CLIENT, queryTime, int32_bl);

        bool_bl e = false;

 

        for i = [0:datasize]

        {

           e = e ? e : (closeInTime(queryTime,dataTime[i]) &&_bl closeInSpace(queryLocLat,queryLocLong,dataLocLat[i],dataLocLong[i]));

        };

        output(ALL, e);

}
